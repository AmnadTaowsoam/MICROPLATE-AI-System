// This is your Prisma schema file for Image Ingestion Service
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // Service-owned schema first to host _prisma_migrations
  schemas  = ["image_storage", "public"]
}

// =========================
// IMAGE STORAGE SCHEMA
// =========================

model ImageFile {
  id           Int      @id @default(autoincrement())
  runId        Int?     @map("run_id") // Optional - not all images are tied to prediction runs
  sampleNo     String   @map("sample_no")
  fileType     String   @map("file_type") // raw, annotated, thumbnail
  fileName     String   @map("file_name")
  filePath     String   @map("file_path")
  fileSize     BigInt?  @map("file_size")
  mimeType     String?  @map("mime_type")
  width        Int?
  height       Int?
  bucketName   String?  @map("bucket_name")
  objectKey    String?  @map("object_key")
  signedUrl    String?  @map("signed_url")
  urlExpiresAt DateTime? @map("url_expires_at")
  description  String?
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")
  
  @@map("image_file")
  @@schema("image_storage")
  @@index([runId])
  @@index([sampleNo])
  @@index([fileType])
  @@index([createdAt])
}

// =========================
// PUBLIC SCHEMA (Utilities)
// =========================

model HealthCheck {
  id        String   @id @default(uuid()) @db.Uuid
  service   String
  status    String   // healthy, unhealthy, degraded
  message   String?
  timestamp DateTime @default(now())
  
  @@map("health_checks")
  @@schema("public")
  @@index([service])
  @@index([timestamp])
}
